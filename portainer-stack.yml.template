# NextDNS Optimized Analytics - Portainer Stack Template
# 
# This is a template file for Portainer stack deployment.
# Copy this file to portainer-stack.yml and replace the placeholder values:
#
# 1. YOUR_POSTGRES_PASSWORD_HERE - Set a secure password for PostgreSQL
# 2. YOUR_NEXTDNS_API_KEY_HERE - Your NextDNS API key from dashboard
# 3. profile1,profile2,profile3 - Replace with your actual NextDNS profile IDs
# 4. YOUR_LOCAL_API_KEY_HERE - Generate a secure key for local API access
#
# IMPORTANT: Never commit the actual portainer-stack.yml file to version control!
# Only this template should be tracked in git.

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: nextdns-analytics-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: nextdns_user
      POSTGRES_PASSWORD: YOUR_POSTGRES_PASSWORD_HERE
      POSTGRES_DB: nextdns
    volumes:
      - nextdns_db_data:/var/lib/postgresql/data
    networks:
      - nextdns-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nextdns_user -d nextdns"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API Service (with auto-init)
  backend:
    image: maboni82/nextdns-optimized-analytics-backend:latest
    container_name: nextdns-analytics-backend
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Database Configuration
      POSTGRES_USER: nextdns_user
      POSTGRES_PASSWORD: YOUR_POSTGRES_PASSWORD_HERE
      POSTGRES_DB: nextdns
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      
      # NextDNS API Configuration
      API_KEY: YOUR_NEXTDNS_API_KEY_HERE
      PROFILE_IDS: profile1,profile2,profile3
      
      # Local API Authentication
      LOCAL_API_KEY: YOUR_LOCAL_API_KEY_HERE
      
      # Application Configuration
      LOG_LEVEL: DEBUG
      FETCH_INTERVAL: 1
      FETCH_LIMIT: 1000
    ports:
      - "5001:5000"
    networks:
      - nextdns-network
    command: ["sh", "-c", "python manage_db.py init && uvicorn main:app --host 0.0.0.0 --port 5000 --log-level info"]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  # Frontend Service
  frontend:
    image: maboni82/nextdns-optimized-analytics-frontend:latest
    container_name: nextdns-analytics-frontend
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    environment:
      # Backend API URL (internal to container network)
      BACKEND_API_URL: http://backend:5000/api
    ports:
      - "3000:80"
    networks:
      - nextdns-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/ || exit 1"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

volumes:
  nextdns_db_data:
    driver: local

networks:
  nextdns-network:
    driver: bridge
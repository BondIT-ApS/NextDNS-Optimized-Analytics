name: üöÄ LEGO Production Build & Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  # üè¢ Production LEGO Assembly Line
  production-build:
    name: üè¢ Build Production LEGO Set (${{ matrix.service }})
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [backend, frontend]

    steps:
      - name: üìé Get LEGO Instructions (Checkout)
        uses: actions/checkout@v4

      - name: üåç Set up Multi-Platform Builder (QEMU)
        uses: docker/setup-qemu-action@v2

      - name: üîß Prepare Assembly Line (Docker Buildx)
        uses: docker/setup-buildx-action@v2
        id: buildx

      - name: üîë Connect to LEGO Warehouse (Docker Hub)
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: üè∑Ô∏è Create LEGO Set Version Tag
        id: tag
        run: |
          VERSION="v1.0.0"
          if [ ! -z "${{ github.event.release.tag_name }}" ]; then
            VERSION=${{ github.event.release.tag_name }}
          fi
          DATE_TAG=$(date +'%Y%m%d')
          VERSION_TAG="${VERSION}-${DATE_TAG}"
          echo "tag=${VERSION_TAG}" >> $GITHUB_ENV
          echo "Building LEGO set version: ${VERSION_TAG}"

      - name: üîß Prepare LEGO Pieces (Backend Dependencies)
        if: matrix.service == 'backend'
        run: |
          pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: üè¢ Assemble Production LEGO Set
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.${{ matrix.service }}
          push: true
          tags: |
            maboni82/nextdns-optimized-analytics-${{ matrix.service }}:latest
            maboni82/nextdns-optimized-analytics-${{ matrix.service }}:${{ env.tag }}
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
